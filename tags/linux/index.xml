<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Rubik Cell Space</title>
    <link>https://ash-z01.github.io/tags/linux/</link>
    <description>Recent content in linux on Rubik Cell Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Apr 2021 14:46:02 +0800</lastBuildDate><atom:link href="https://ash-z01.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rsync under the hood</title>
      <link>https://ash-z01.github.io/2021/rsync/</link>
      <pubDate>Wed, 21 Apr 2021 14:46:02 +0800</pubDate>
      
      <guid>https://ash-z01.github.io/2021/rsync/</guid>
      <description>0x00 rsync 简介 Rsync 是一款开源，快速，多功能的数据同步工具.
 rsync 可以实现本地与远程主机之间数据的快速同步，本地主机的不同分区或目录之间也能进行同步 rsync 实现了全量或增量的数据同步、远程备份，类似 scp  但是 scp 只能全量备份
  rsync 同样可以用于文件和目录的删除 rsync 以一当三 实现了 scp cp rm 的功能，且优于它们  0x01 rsync 核心算法 前情提要 在开始算法原理之前，先简单说明下 rsync 是如何进行增量传输的.
假设现有主机和文件信息如下:
    主机名 文件名 文件内容     发送端 α A ashxx123_zoe   接收端 β B ash123zoey    我们要将文件 A 同步到 β 主机上
 实际上 A 和 B 是同名文件, 为区分使用不同的名字</description>
    </item>
    
  </channel>
</rss>
