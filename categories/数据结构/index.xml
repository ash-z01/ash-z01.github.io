<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据结构 on Rubik Cell Space</title>
    <link>https://ash-z01.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
    <description>Recent content in 数据结构 on Rubik Cell Space</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Jun 2021 14:46:02 +0800</lastBuildDate><atom:link href="https://ash-z01.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>B&#43;树</title>
      <link>https://ash-z01.github.io/2021/bplustree/</link>
      <pubDate>Sun, 06 Jun 2021 14:46:02 +0800</pubDate>
      
      <guid>https://ash-z01.github.io/2021/bplustree/</guid>
      <description>起因 最近在研究数据库的一些实现，想着DIY一个~
虽然早就从大名鼎鼎的MySQL知识中了解到，经典的索引结构采用了B+树，但是真正涉及到实现细节，还是有点烦乱~
所以这篇文章，也就是一个B+树的实现和分析笔记了.
直接开始吧~ </description>
    </item>
    
  </channel>
</rss>
